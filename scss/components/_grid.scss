// ==========================================================================
// Grid Container
// ==========================================================================

.container {
  @include flexbox;
  flex-direction: column;
  align-items: center;
}

.grid {
  @extend %clearfix;
  @include centered;
  @include flexbox;
  flex-direction: column;

  // Make nested grid 100%
  [class*="grid__col--"] > & {
    width: 100%;

  }

  // Styling grid__row
  &__row {
    width: 90%;

    @include display-desktop {

      text-align: center;
      display: flex;
    }

  }


  // Set a max-width for grid container
  @media (min-width: 1100px) {
    max-width: $g-cont-max-w;
  }
}

// ==========================================================================
// Grid Columns
// ==========================================================================

// Calculate grid columns

@media (min-width: 769px) {
  @for $i from 1 through $g-col-count {
    $context: g-context($g-col-width, $g-col-count ,$g-gutter-width) !global;
    $target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1));


    // Generate column modifier classes
    .grid__col--#{$i} {
      width: percentage($target / $context);

    }
  }
}

// Column styles

.grid__col {
  @include bg-colors($col-colors);
}

[class^="grid__col--"] {
  @media (min-width: 1px) and (max-width: 768px) {
    margin-top: em(12px);
    margin-bottom: em(12px);
    border-radius: 5px;
    padding: 10px;
    text-align: center;
    @include flexbox;
    flex-direction: column;
  }
  @media (min-width: 769px) {
    @include doubly(percentage($g-gutter-width / $context));
    float: left;
    padding-left: 10px;
    padding-right: 10px;
    margin: 10px auto;
    min-height: 45px;
    border-radius: 5px;
    align-items: center;

    @include flexbox;
    flex-direction: row;
    &:last-of-type {
      float: right;
    }
  }
}